{"version":3,"sources":["media/s-icon.png","components/Header.js","components/Login.js","components/SignUp.js","components/Users.js","components/EditContentModal.js","components/Comment.js","components/Post.js","components/EditUserModal.js","components/ImageModal.js","components/Profile.js","components/Friends.js","components/Home.js","App.js","index.js"],"names":["Header","props","token","JSON","parse","localStorage","getItem","className","to","src","icon","alt","loggedIn","user","_id","onClick","logOut","Login","history","useHistory","redirectToHome","push","useState","message","setMessage","setTokenWithExpiration","data","item","expires","moment","add","setItem","stringify","setLoggedIn","onSubmit","e","preventDefault","fetch","process","method","headers","body","target","username","value","password","then","res","json","id","type","placeholder","required","appId","autoLoad","callback","response","initRes","render","renderProps","SignUp","email","confirmation","firstName","lastName","map","msg","Users","users","setUsers","friendRequested","setFriendRequested","requestedFriends","setRequestedFriends","friends","friendList","setFriendList","useEffect","checkIfTokenIsExpired","componentMounted","friendRequestedList","requestedFriendList","forEach","request","requester","requested","avatar","includes","person","currentUser","filteredFriends","filter","friend","updatedToken","removeFriend","acceptRequest","tempRequested","EditContentModal","closeModal","content","setPost","post","setComment","name","defaultValue","Comment","commentLikes","setCommentLikes","commentIsLiked","setCommentIsLiked","showEditModal","setShowEditModal","comment","editComment","like_list","like","author","window","confirm","comments","postComments","setPostComments","commentID","tempCommentLikes","length","Post","errorMessage","setErrorMessage","displayComments","setDisplayComments","textAreaText","setTextAreaText","postIsLiked","setPostIsLiked","postLikes","setPostLikes","editPost","comment_list","Date","createdAt","toLocaleString","postID","posts","setPosts","isPicture","tempPostLikes","tempPostComments","unshift","onChange","EditUserModal","picture","setPicture","formData","FormData","append","toString","imageURL","tempUser","Object","assign","firstname","setUser","withIcon","buttonText","pic","imgExtension","maxFileSize","singleImage","withPreview","ImageModal","tempUserPosts","userPosts","setUserPosts","Profile","userID","useParams","setFriends","showImageModal","setShowImageModal","editUser","uploadImage","userList","post_list","toLocaleDateString","Friends","Home","postFeed","tempPosts","App","removeItem","location","reload","basename","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d648794.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/s-icon.7c6357dc.png\";","import '../styles/Header.css';\nimport icon from '../media/s-icon.png';\nimport { Link } from 'react-router-dom';\nimport { BsHouseDoorFill, BsFillPersonFill, BsFillPeopleFill } from 'react-icons/bs';\n\nfunction Header(props) {\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  return (\n    <header className=\"header\">\n      <Link  className='logo' to='/'>\n        <img className='icon' src={icon} alt='social'/>\n        <p className='logo-text'>social</p>\n      </Link>\n      <nav className='nav-bar'>\n        <ul className='nav-bar-list'>\n          <li className='nav-bar-list-item'>\n            {props.loggedIn && <Link to='/'><BsHouseDoorFill /></Link>}\n          </li>\n          <li className='nav-bar-list-item'>\n            {props.loggedIn && <Link to={`/users/${token.user._id}`}><BsFillPersonFill /></Link>}\n          </li>\n          <li className='nav-bar-list-item'>\n            {props.loggedIn && <Link to='/users'><BsFillPeopleFill /></Link>}\n          </li>\n        </ul>\n      </nav>\n      <div className='action-buttons'>\n        {props.loggedIn && <button className='action-button btn' onClick={props.logOut}>Log out</button>}\n        {!props.loggedIn && <Link className='action-button btn' to='/signup'>Sign up</Link>}\n        {!props.loggedIn && <Link className='action-button btn' to='login'>Log in</Link>}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import '../styles/Login.css';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\nfunction Login(props) {\n\n  let history = useHistory();\n  \n  const redirectToHome = () => {\n    history.push('/');\n  };\n\n  const [message, setMessage] = useState(null);\n\n  const setTokenWithExpiration = (data) => {\n    const item = {\n      token: data.token,\n      user: data.user,\n      expires: moment().add(1, 'days')\n    };\n    localStorage.setItem('token', JSON.stringify(item));\n    props.setLoggedIn(true);\n  };\n\n  const login = (e) => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_API_DOMAIN}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    }).then((res) => {\n      res.json().then((res) => {\n        if (res.user) {\n          setTokenWithExpiration(res);\n          setMessage(null);\n          redirectToHome();\n        } else {\n          setMessage(res.message);\n        };\n      });\n    });\n  };\n\n  const facebookLogin = (response) => {\n    fetch(`${process.env.REACT_APP_API_DOMAIN}/login/facebook`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(response)\n    }).then((initRes) => {\n      initRes.json().then(res => {\n        setTokenWithExpiration(res);\n        redirectToHome();\n      });\n    });\n  };\n\n  return (\n    <div className=\"login\">\n      <form className='login-form' onSubmit={login}>\n        <p className='error-message'>{message}</p>\n        <h5>Log in</h5>\n        <input id='username' type='email' placeholder='email' required />\n        <input id='password' type='password' placeholder='password' required />\n        <button className='btn' type='submit'>Log in</button>\n      </form>\n      <div className='spacer'>OR</div>\n      <FacebookLogin\n        appId=\"343361590828520\"\n        autoLoad\n        callback={facebookLogin}\n        render={\n          renderProps => (\n          <button className='facebook-btn btn' onClick={renderProps.onClick}>Log in with Facebook</button>\n          )\n        }\n      />\n    </div>\n  );\n}\n\nexport default Login;","import '../styles/SignUp.css';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nfunction SignUp(props) {\n\n  let history = useHistory();\n\n  const redirectToHome = () => {\n    history.push('/');\n  };\n\n  const [message, setMessage] = useState(null);\n\n  const setTokenWithExpiration = (data) => {\n    const item = {\n      token: data.token,\n      user: data.user,\n      expires: moment().add(1, 'days')\n    };\n    localStorage.setItem('token', JSON.stringify(item));\n    props.setLoggedIn(true);\n  };\n\n  const createUser = (e) => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_API_DOMAIN}/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'email': e.target.email.value,\n        'password': e.target.password.value,\n        'confirmation': e.target.confirmation.value,\n        'firstName': e.target.firstName.value,\n        'lastName': e.target.lastName.value\n      })\n    }).then((res) => {\n      res.json().then((res) => {\n        if (res.user) {\n          setTokenWithExpiration(res);\n          setMessage(null);\n          redirectToHome();\n        } else {\n          setMessage(res.message);\n        };\n      });\n    });\n  };\n\n  return (\n    <div className=\"signup\">\n      <form className='signup-form' onSubmit={createUser}>\n        {message && message.map((msg) => {\n          return <p key={msg}className='error-message'>{msg}</p>\n        })}\n        <h5>Sign up</h5>\n        <input id='firstName' placeholder='First Name' />\n        <input id='lastName' placeholder='Last Name' />\n        <input id='email' type='email' placeholder='Email' required />\n        <input id='password' type='password' placeholder='Password' required />\n        <input id='confirmation' type='password' placeholder='Re-enter password' required />\n        <button type='submit'>Sign up</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignUp;","import '../styles/Users.css';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Users(props) {\n\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  const [users, setUsers] = useState(null);\n  const [friendRequested, setFriendRequested] = useState({ data: [] });\n  const [requestedFriends, setRequestedFriends] = useState({ data: [] });\n  const [friendList, setFriendList] = useState({ data: token.user.friends });\n  \n  const requestFriend = (person) => {\n    if (!props.checkIfTokenIsExpired()) {\n      // Make call to api to create new friend request\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/friendRequests/${person._id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        }\n      }).then((initRes) => {\n        initRes.json().then(() => {\n          // Update state to show that friend was requested\n          let tempRequested = requestedFriends.data;\n          tempRequested.push(person._id);\n          setRequestedFriends({ data: tempRequested });\n        });\n      }); \n    };\n  };\n\n  const removeFriend = (person) => {\n    if (!props.checkIfTokenIsExpired()) {\n      const currentUser = JSON.parse(localStorage.getItem('token')).user;\n\n      // Remove current user from person who requested friendship's friend list\n      let filteredFriends = person.friends.filter(friend => {\n        return friend !== currentUser._id;\n      });\n\n      person.friends = filteredFriends;\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${person._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        },\n        body: JSON.stringify(person)\n      });\n\n      // Remove person who requested friendship from current user's friend list\n      filteredFriends = currentUser.friends.filter(friend => {\n        return friend !== person._id;\n      });\n      currentUser.friends = filteredFriends;\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${currentUser._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        },\n        body: JSON.stringify(currentUser)\n      }).then((res) => {\n        res.json().then((res) => {\n          let updatedToken = JSON.parse(localStorage.getItem('token'));\n          updatedToken.user = res;\n          localStorage.setItem('token', JSON.stringify(updatedToken));\n          setFriendList({ data: filteredFriends });\n        });\n      });\n    };\n  };\n\n  const acceptRequest = (person) => {\n    if (!props.checkIfTokenIsExpired()) {\n\n      // Remove person from friendRequested state\n      setFriendRequested({ data: friendRequested.data.filter(friend => friend !== person._id) });\n\n      const currentUser = JSON.parse(localStorage.getItem('token')).user;\n\n      // Add current user to person who requested friendship's friend list\n      person.friends.push(currentUser._id);\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${person._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        },\n        body: JSON.stringify(person)\n      });\n\n      // Add person who requested friendship to current user's friend list\n      currentUser.friends.push(person._id);\n      setFriendList({ data: currentUser.friends });\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${currentUser._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        },\n        body: JSON.stringify(currentUser)\n      }).then((res) => {\n        res.json().then((res) => {\n          let updatedToken = JSON.parse(localStorage.getItem('token'));\n          updatedToken.user = res;\n          localStorage.setItem('token', JSON.stringify(updatedToken));\n        });\n      });\n\n      // Find friend request in database\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/friendRequests`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        },\n      }).then((initRes) => {\n        initRes.json().then((res) => {\n          res.forEach((request) => {\n            if (request.requested === currentUser._id && request.requester === person._id) {\n              // Remove friend request from DB\n              fetch(`${process.env.REACT_APP_API_DOMAIN}/friendRequests/${request._id}`, {\n                method: 'DELETE',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token.token}`\n                }\n              });\n            };\n          });\n        });\n      });\n    };\n  };\n\n  useEffect(() => {\n    if (!props.checkIfTokenIsExpired()) {\n      let componentMounted = true;\n      // Make api call to get all users\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/users`,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token.token}`\n          }\n        }\n      ).then((initRes) => {\n        initRes.json().then((res) => {\n          if (componentMounted) {\n            setUsers(res);  \n          };\n        });\n      });\n      // Get all friend requests that apply to current user\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/friendRequests`, {\n        headers: {\n          'Authorization': `Bearer ${token.token}`\n        }\n      }).then((initRes) => {\n        initRes.json().then((res) => {\n          let friendRequestedList = [];\n          let requestedFriendList = [];\n          res.forEach((request) => {\n            if (request.requester === token.user._id) {\n              requestedFriendList.push(request.requested);\n            } else if (request.requested === token.user._id) {\n              friendRequestedList.push(request.requester);\n            };\n          });\n          if (componentMounted) {\n            setRequestedFriends({ data: requestedFriendList });\n            setFriendRequested({ data: friendRequestedList });  \n          };\n          \n        });\n      });\n      return () => {\n        componentMounted = false;\n      };\n    };\n  }, [token.user._id, token.token]);\n\n  return (\n    <div className='users-page'>\n      {\n        users && users.map((user) => {\n        if (user._id !== token.user._id) {\n          return (\n            <div key={user._id} className='user'>\n              <Link className='user-image-backdrop' to={`/users/${user._id}`}>\n                <img className='user-image' src={user.avatar} alt={`${user.firstName}'s avatar`} />\n              </Link>\n              <h5 className='user-name'><Link to={`/users/${user._id}`}>{`${user.firstName} ${user.lastName}`}</Link></h5>\n              {\n                (friendList.data.includes(user._id) && <button className='remove-friend-button btn' onClick={() => removeFriend(user)}>Remove friend</button>) || \n                (((requestedFriends.data.includes(user._id) &&\n                  <div className='requested-block'>Friend requested</div>) ||\n                (friendRequested.data.includes(user._id) &&\n                  <button className='friend-requested btn' onClick={() => acceptRequest(user)}>Accept request</button>)) ||\n                <button className='add-friend-button btn' onClick={() => requestFriend(user)}>Add friend</button> )\n              }\n            </div>\n          );\n        };\n        })\n      }\n    </div>\n  );\n};\n\nexport default Users;","import '../styles/EditContentModal.css';\nimport { BsX } from 'react-icons/bs';\n\nfunction EditContentModal(props) {\n\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  const editContent = (e) => {\n    e.preventDefault();\n    if (!props.checkIfTokenIsExpired()) {\n      if (props.type === 'post') {\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${props.content._id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token.token}`\n          },\n          body: JSON.stringify({ content: e.target.content.value })\n        }).then(initRes => {\n          initRes.json().then(res => {\n            props.closeModal();\n            props.setPost(res);\n          });\n        });\n      } else {\n        // Edit comment\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${props.content.post}/comments/${props.content._id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token.token}`\n          },\n          body: JSON.stringify({ content: e.target.content.value })\n        }).then(initRes => {\n          initRes.json().then(res => {\n            props.closeModal();\n            props.setComment(res);\n          });\n        })\n      };\n    };\n  };\n  \n  return (\n    <div className='edit-modal'>\n      <div className='edit-form'>\n        <header className='edit-form-header'>\n          <button className='close-modal-button' onClick={props.closeModal}><BsX /></button>\n          Edit {props.type}\n        </header>\n        <div className='edit-form-content'>\n          <form onSubmit={editContent} className='edit-form-form'>\n            <input name='content' id='content' defaultValue={props.content.content} />\n            <button type='submit' className='btn'>Save</button>\n          </form>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default EditContentModal;","import '../styles/Comment.css';\nimport { useState, useEffect } from 'react';\nimport { FaRegThumbsUp } from 'react-icons/fa';\nimport { BsPencil, BsTrashFill } from 'react-icons/bs';\nimport EditModal from './EditContentModal';\n\nfunction Comment(props) {\n\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  const [commentLikes, setCommentLikes] = useState({ data: [] });\n  const [commentIsLiked, setCommentIsLiked] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [comment, setComment] = useState(props.comment);\n\n  const changeLikeStatus = (commentID) => {\n    if (!props.checkIfTokenIsExpired()) {\n      // If user has already liked comment...\n      if (commentIsLiked) {\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${props.comment.post}/comments/${commentID}/likes`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token.token}`\n          }\n        }).then(initRes => {\n          initRes.json().then(res => {\n            setCommentIsLiked(false);\n            let tempCommentLikes = commentLikes.data.filter(like => (like.comment !== commentID) && (like.user !== token.user._id));\n            setCommentLikes({ data: tempCommentLikes });\n          });\n        });\n      } else {\n        // If user hasn't already liked comment...\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${props.comment.post}/comments/${commentID}/likes`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token.token}`\n          }\n        }).then(initRes => {\n          initRes.json().then(res => {\n            setCommentIsLiked(true);\n            let tempCommentLikes = commentLikes.data;\n            tempCommentLikes.push(res);\n            setCommentLikes({ data: tempCommentLikes });\n          });\n        });\n      };\n    };\n  };\n\n  const editComment = () => {\n    if (!props.checkIfTokenIsExpired()) {\n      setShowEditModal(!showEditModal);\n    };\n  };\n\n  const deleteComment = () => {\n    if (!props.checkIfTokenIsExpired()) {\n      if (window.confirm('Are you sure you want to delete this comment?')) {\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${comment.post}/comments/${comment._id}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token.token}`\n          }\n        }).then((res) => {\n          res.json().then((res) => {\n            let comments = props.postComments.data.filter(comment => comment._id !== props.comment._id);\n            props.setPostComments({ data: comments });\n          });\n        });\n      };\n    };\n  };\n\n  useEffect(() => {\n    if (!props.checkIfTokenIsExpired()) {\n      // Get all likes for comment\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${props.comment.post}/comments/${props.comment._id}/likes`, {\n        headers: {\n          'Authorization': `Bearer ${token.token}`\n        }\n      }).then(initRes => {\n        initRes.json().then(like_list => {\n          if (like_list.message) {\n            //Not sure what to do - maybe a 404\n          } else {\n            setCommentLikes({ data: like_list });\n            like_list.forEach((like) => {\n              if (like.user === token.user._id) {\n                setCommentIsLiked(true);\n              } else {\n                setCommentIsLiked(false);\n              };\n            });\n          };\n        });\n      });\n    };\n    \n  }, [props.comment.post, props.comment._id, token.token, token.user._id])\n  \n  return (\n    <div className='comment'>\n      {showEditModal && <EditModal type='comment' closeModal={editComment} content={comment} setComment={setComment} checkIfTokenIsExpired={props.checkIfTokenIsExpired} />}\n        <img className='comment-avatar' src={props.comment.author.avatar} alt={`${props.comment.author.firstName}'s avatar`} />\n        <div className='comment-content'>\n          <h6 className='comment-author'>{`${props.comment.author.firstName} ${props.comment.author.lastName}`}</h6>\n          <div className='comment-button-container'>\n            {\n              props.comment.author._id === token.user._id &&\n              <button className='edit-comment-button' onClick={editComment}><BsPencil /></button> \n            }\n            {\n              props.comment.author._id === token.user._id &&\n              <button className='delete-comment-button' onClick={deleteComment}><BsTrashFill /></button>\n            }\n          </div>\n          {comment.content}\n          <button className='comment-like-button' onClick={() => { changeLikeStatus(props.comment._id) }}>{(!commentIsLiked && 'Like') || 'Unlike'}</button>\n          <span className='like-count'><FaRegThumbsUp />{commentLikes.data.length}</span>\n        </div>\n    </div>\n  );\n}\n\nexport default Comment;","import '../styles/Post.css';\nimport { BsFillTrashFill, BsPencil, BsChatDots } from 'react-icons/bs';\nimport { FaRegThumbsUp } from 'react-icons/fa';\nimport Comment from './Comment';\nimport { useState, useEffect } from 'react';\nimport EditModal from './EditContentModal';\nimport { Link } from 'react-router-dom';\n\nfunction Post(props) {\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  const [postComments, setPostComments] = useState({ data: [] });\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [displayComments, setDisplayComments] = useState(false);\n  const [textAreaText, setTextAreaText] = useState('');\n  const [postIsLiked, setPostIsLiked] = useState(false);\n  const [postLikes, setPostLikes] = useState({ data: [] });\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [post, setPost] = useState(props.post);\n\n  const changeText = (e) => {\n    setTextAreaText(e.target.value);\n  };\n\n  const deletePost = (postID) => {\n    if (!props.checkIfTokenIsExpired()) {\n      if (window.confirm('Are you sure you want to delete this post?')) {\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${postID}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token.token}`\n          }\n        }).then((res) => {\n          res.json().then((res) => {\n            let posts = props.posts.data.filter(post => post._id !== props.post._id);\n            props.setPosts({ data: posts });\n          });\n        });\n      };\n    };\n  };\n\n  const editPost = () => {\n    if (!props.checkIfTokenIsExpired()) {\n      setShowEditModal(!showEditModal);\n    };\n  };\n\n  const createComment = (e) => {\n    e.preventDefault();\n    if (!props.checkIfTokenIsExpired()) {\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${props.post._id}/comments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        },\n        body: JSON.stringify({ 'content': textAreaText, 'author': token.user })\n      }).then((initRes) => {\n        initRes.json().then((comment) => {\n          if (comment.message) {\n            setErrorMessage(comment.message);\n          } else {\n            let tempPostComments = postComments.data;\n            comment.author = token.user;\n            tempPostComments.unshift(comment);\n            setPostComments({ data: tempPostComments });\n            setTextAreaText('');\n          };\n        });\n      });\n    };\n  };\n\n  const changeLikeStatus = (postID) => {\n    if (!props.checkIfTokenIsExpired()) {\n      // If user has already liked post...\n      if (postIsLiked) {\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${postID}/likes`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token.token}`\n          }\n        }).then(initRes => {\n          initRes.json().then(res => {\n            setPostIsLiked(false);\n            let tempPostLikes = postLikes.data.filter(like => (like.post !== postID) && (like.user !== token.user._id));\n            setPostLikes({ data: tempPostLikes });\n          });\n        });\n      } else {\n        // If user hasn't already liked post...\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${postID}/likes`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token.token}`\n          }\n        }).then(initRes => {\n          initRes.json().then(res => {\n            setPostIsLiked(true);\n            let tempPostLikes = postLikes.data;\n            tempPostLikes.push(res);\n            setPostLikes({ data: tempPostLikes });\n          });\n        });\n      };\n    };\n  };\n\n  useEffect(() => {\n    if (!props.checkIfTokenIsExpired()) {\n      // Get all post comments\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${props.post._id}/comments`, {\n        headers: {\n          'Authorization': `Bearer ${token.token}`\n        }\n      }).then((initRes) => {\n        initRes.json().then((comment_list) => {\n          setPostComments({ data: comment_list });\n        });\n      });\n\n      // Get all post likes\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/posts/${props.post._id}/likes`, {\n        headers: {\n          'Authorization': `Bearer ${token.token}`\n        }\n      }).then(initRes => {\n        initRes.json().then(res => {\n          if (res.message) {\n            //Not sure what to do - maybe a 404\n          } else {\n            setPostLikes({ data: res });\n            res.forEach((like) => {\n              if (like.user === token.user._id) {\n                setPostIsLiked(true);\n              } else {\n                setPostIsLiked(false);\n              };\n            });\n          };\n        });\n      });\n    };\n  }, [token.token, props.post._id, token.user._id])\n\n  return (\n    <div className='post'>\n      {showEditModal && <EditModal type='post' closeModal={editPost} content={post} setPost={setPost} checkIfTokenIsExpired={props.checkIfTokenIsExpired} />}\n      <div className='post-header'>\n        <Link className='post-author' to={`/users/${props.post.author._id}`}>\n          <img className='post-avatar' src={props.post.author.avatar} alt={`${props.post.author.firstName}'s avatar`} />\n          {props.post.author.firstName} {props.post.author.lastName}\n        </Link>\n        <span className='post-time'>{new Date(props.post.createdAt).toLocaleString()}</span>\n        {\n          props.post.author._id === token.user._id &&\n          <button onClick={() => deletePost(props.post._id)} className='delete-button'><BsFillTrashFill /></button>\n        }\n        {\n          props.post.author._id === token.user._id &&\n          <button onClick={() => editPost(props.post._id)} className='edit-button'><BsPencil /></button>\n        }\n      </div>\n      <div className='post-content'>\n        {\n          (post.isPicture && <img src={post.content} alt={post.content} className='post-image'/>) ||\n          post.content\n        }\n      </div>\n      <div className='action-buttons'>\n        <button className='action-button' onClick={() => { changeLikeStatus(props.post._id) }}><FaRegThumbsUp />{(!postIsLiked && 'Like') || 'Unlike'}</button>\n        <button className='action-button' onClick={() => { setDisplayComments(!displayComments) }}><BsChatDots />Comment</button>\n      </div>\n      <span className='like-count'><FaRegThumbsUp /> {postLikes.data.length}</span>\n      {\n        displayComments &&\n        <div className='comments'>\n          <form className='comment-form' onSubmit={createComment}>\n            <img className='comment-avatar' src={token.user.avatar} alt={`${token.user.firstName}'s avatar`} />\n            <div className={`text-area-container ${errorMessage && 'highlight-error'}`}>\n              {<div className='error-message'>{errorMessage}</div>}\n              <textarea id='content' name='content' onChange={changeText} value={textAreaText} placeholder='Write comment...' required />\n            </div>\n            <button className='create-comment-button btn'>Submit</button>\n          </form>\n          {\n            postComments.data.map(comment => {\n              return <Comment key={comment._id} comment={comment} postComments={postComments} setPostComments={setPostComments} checkIfTokenIsExpired={props.checkIfTokenIsExpired} />;\n            })\n          }\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default Post;","import '../styles/EditUserModal.css';\nimport { BsX } from 'react-icons/bs';\nimport ImageUploader from 'react-images-upload';\nimport { useState } from 'react';\n\nfunction EditUserModal(props) {\n\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  const [picture, setPicture] = useState(null);\n  \n  const onDrop = (pic) => {\n    setPicture(pic[0]);\n  };\n\n  const editUser = (e) => {\n    e.preventDefault();\n    if (!props.checkIfTokenIsExpired()) {\n      if (picture) {\n        let formData = new FormData();\n        formData.append('name', new Date().toString());\n        formData.append('image', picture);\n        // upload avatar to S3\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/imageUpload/${props.user._id}/avatar-upload`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token.token}`\n          },\n          body: formData\n        }).then(initRes => {\n          initRes.json().then(imageURL => {\n            // update user\n            let tempUser = {};\n            Object.assign(tempUser, props.user);\n            tempUser.firstname = e.target.firstName.value;\n            tempUser.lastName = e.target.lastName.value;\n            tempUser.avatar = imageURL;\n            fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${props.user._id}`, {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token.token}`\n              },\n              body: JSON.stringify(tempUser)\n            });\n            token.user = tempUser;\n            props.setUser(tempUser);\n            localStorage.setItem('token', JSON.stringify(token));\n          });\n        });\n      } else {\n        let tempUser = {};\n        Object.assign(tempUser, props.user);\n        tempUser.firstName = e.target.firstName.value;\n        tempUser.lastName = e.target.lastName.value;\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${props.user._id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token.token}`\n          },\n          body: JSON.stringify(tempUser)\n        });\n        token.user = tempUser;\n        props.setUser(tempUser);\n        localStorage.setItem('token', JSON.stringify(token));\n      };\n      props.closeModal();\n    };\n  };\n  \n  return (\n    <div className='edit-user-modal'>\n      <div className='edit-form'>\n        <header className='edit-form-header'>\n          <button className='close-modal-button' onClick={props.closeModal}><BsX /></button>\n          Edit profile\n        </header>\n        <div className='edit-form-content'>\n          <form onSubmit={editUser} className='edit-form-form'>\n            <ImageUploader\n              withIcon={true}\n              buttonText='Choose Image'\n              onChange={onDrop}\n              imgExtension={['.jpeg', '.jpg', '.gif', '.png']}\n              maxFileSize={5242880}\n              singleImage={true}\n              withPreview={true}\n              />\n            <input name='firstName' id='firstName' defaultValue={props.user.firstName} />\n            <input name='lastName' id='lastName' defaultValue={props.user.lastName} />\n            <button type='submit' className='btn'>Save</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EditUserModal;","import '../styles/ImageModal.css';\nimport { BsX } from 'react-icons/bs';\nimport ImageUploader from 'react-images-upload';\nimport { useState } from 'react';\n\nfunction ImageModal(props) {\n\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  const [picture, setPicture] = useState(null);\n  \n  const onDrop = (pic) => {\n    setPicture(pic[0]);\n  };\n\n  const createImagePost = (e) => {\n    e.preventDefault();\n    if (!props.checkIfTokenIsExpired()) {\n      if (picture) {\n        let formData = new FormData();\n        formData.append('name', new Date().toString());\n        formData.append('image', picture);\n        // upload image to S3\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/imageUpload`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token.token}`\n          },\n          body: formData\n        }).then(initRes => {\n          initRes.json().then(imageURL => {\n            // API CALL TO CREATE POST\n            fetch(`${process.env.REACT_APP_API_DOMAIN}/posts`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token.token}`\n              },\n              body: JSON.stringify({ 'isPicture': true, 'author': token.user._id, content: imageURL })\n            }).then((initRes) => {\n              initRes.json().then((res) => {\n                let tempUserPosts = props.userPosts.data;\n                res.author = token.user\n                tempUserPosts.unshift(res);\n                props.setUserPosts({ data: tempUserPosts });\n              });\n            });\n          });\n        });\n      };\n    };\n    props.closeModal();\n  };\n  \n  return (\n    <div className='image-upload-modal'>\n      <form onSubmit={createImagePost}>\n        <ImageUploader\n          withIcon={true}\n          buttonText='Choose Image'\n          onChange={onDrop}\n          imgExtension={['.jpeg', '.jpg', '.gif', '.png']}\n          maxFileSize={5242880}\n          singleImage={true}\n          withPreview={true}\n        />\n        <button className='upload-image-btn btn' type='submit'>Create Post</button>\n      </form>\n      <button className='close-modal-button' onClick={props.closeModal}><BsX /></button>\n    </div>\n  );\n}\n\nexport default ImageModal;","import '../styles/Profile.css';\nimport Post from './Post';\nimport EditUserModal from './EditUserModal';\nimport { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { BsPencil, BsFillImageFill } from 'react-icons/bs';\nimport ImageModal from './ImageModal';\n\nfunction Profile(props) {\n\n  const token = JSON.parse(localStorage.getItem('token'));\n  const { userID } = useParams();\n\n  const [user, setUser] = useState(null);\n  const [userPosts, setUserPosts] = useState({ data: [] });\n  const [textAreaText, setTextAreaText] = useState('');\n  const [friends, setFriends] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showImageModal, setShowImageModal] = useState(false);\n\n  const createPost = (e) => {\n    e.preventDefault();\n    if (!props.checkIfTokenIsExpired()) {\n      // API CALL TO CREATE POST\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/posts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        },\n        body: JSON.stringify({ 'content': e.target.content.value, 'author': userID })\n      }).then((initRes) => {\n        initRes.json().then((res) => {\n          if (res.message) {\n            setErrorMessage(res.message);\n          } else {\n            let tempUserPosts = userPosts.data;\n            res.author = user\n            tempUserPosts.unshift(res);\n            setUserPosts({ data: tempUserPosts });\n            setTextAreaText('');\n            setErrorMessage(null);\n          };\n        });\n      });\n    };\n  };\n\n  const changeText = (e) => {\n    setTextAreaText(e.target.value);\n  };\n\n  const editUser = () => {\n    if (!props.checkIfTokenIsExpired()) {\n      setShowEditModal(!showEditModal);\n    };\n  };\n\n  const deleteAccount = () => {\n    if (!props.checkIfTokenIsExpired()) {\n      if (window.confirm('Are you sure you want to delete this account?')) {\n        fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${token.user._id}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token.token}`\n          }\n        }).then(() => {\n          props.logOut();\n        });\n      };\n    };\n  };\n\n  const uploadImage = () => {\n    setShowImageModal(!showImageModal);\n  };\n\n  useEffect(() => {\n    if (!props.checkIfTokenIsExpired()) {\n      // Get user from DB\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${userID}`, {\n        headers: {\n          'Authorization': `Bearer ${token.token}`\n        }\n      }).then((initRes) => {\n        initRes.json().then((user) => {\n\n          // Get users from DB and set friends in state\n          fetch(`${process.env.REACT_APP_API_DOMAIN}/users`, {\n            headers: {\n              'Authorization': `Bearer ${token.token}`\n            }\n          }).then((initRes) => {\n            initRes.json().then((userList) => {\n              const friendList = userList.filter(person => user.friends.includes(person._id));\n              setFriends(friendList);\n            });\n          });\n          setUser(user);\n        });\n      });\n\n      // Get all user's posts\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${userID}/posts`, {\n        headers: {\n          'Authorization': `Bearer ${token.token}`\n        }\n      }).then((initRes) => {\n        initRes.json().then((post_list) => {\n          setUserPosts({ data: post_list });\n        });\n      });\n    };\n  }, [token.token, userID]);\n\n  return (\n    <div className='profile-page'>\n      <section className='hero-section'>\n        {showEditModal && <EditUserModal closeModal={editUser} user={user} setUser={setUser} checkIfTokenIsExpired={props.checkIfTokenIsExpired} />}\n        {showImageModal && <ImageModal closeModal={uploadImage} userPosts={userPosts} setUserPosts={setUserPosts} checkIfTokenIsExpired={props.checkIfTokenIsExpired} />}\n        <div className='user-image-backdrop'>\n          {user && <img className='user-avatar' src={user.avatar} alt={`${user.firstName}'s avatar`} />}\n          {\n            user && \n            (user._id === token.user._id &&\n            <button onClick={editUser} className='edit-user-btn'><BsPencil /></button>)\n          }\n        </div>\n        {user && <h4 className='user-name'>{user.firstName} {user.lastName}</h4>}\n        {user && <p>Member since: {new Date(user.createdAt).toLocaleDateString()}</p>}\n        {\n          user && \n          (user._id === token.user._id &&\n          <button className='btn' onClick={deleteAccount}>Delete account</button>)\n        }\n      </section>\n      <main className='main-section'>\n        {\n          // Only display post form if currentUser\n          user && user._id === token.user._id &&\n          <div className='post-form-container'>\n            <form className='post-form' onSubmit={createPost}>\n            <div className={`text-area-container ${errorMessage && 'highlight-error'}`}>\n              {<div className='error-message'>{errorMessage}</div>}\n              <textarea id='content' name='content' onChange={changeText} value={textAreaText} placeholder='What is on your mind?' required />\n            </div>\n            <button className='btn' type='submit'>Post</button>\n            </form>\n            <button className='btn' onClick={uploadImage}><BsFillImageFill /></button>\n          </div>\n        }\n        <div className='user-feed'>\n          <section className='left-section'>\n            <h5 className='title'>Friends</h5>\n            <p className='friend-count'>{`${friends && friends.length} friends`}</p>\n            <div className='friend-tiles'>\n              {\n                friends && friends.map((friend) => {\n                  return (\n                    <Link key={friend._id} className='friend' to={`/users/${friend._id}`}>\n                      <img className='friend-avatar' src={friend.avatar} alt={`${friend.firstName}'s avatar`} />\n                      <p className='friend-name'>{`${friend.firstName} ${friend.lastName}`}</p>\n                    </Link>\n                  )\n                })\n              }\n            </div>\n          </section>\n          <div className='post-feed'>\n            {\n              userPosts &&\n              userPosts.data.map(post => {\n                return <Post key={post._id} posts={userPosts} setPosts={setUserPosts} post={post} checkIfTokenIsExpired={props.checkIfTokenIsExpired} />\n              })\n            }\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Profile;","import '../styles/Friends.css';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Friends(props) {\n\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  const [friends, setFriends] = useState(null);\n\n  const removeFriend = (person) => {\n    if (!props.checkIfTokenIsExpired()) {\n      const currentUser = JSON.parse(localStorage.getItem('token')).user;\n\n      // Remove current user from person who requested friendship's friend list\n      let filteredFriends = person.friends.filter(friend => {\n        return friend !== currentUser._id;\n      });\n\n      person.friends = filteredFriends;\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${person._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        },\n        body: JSON.stringify(person)\n      });\n\n      // Remove person who requested friendship from current user's friend list\n      filteredFriends = currentUser.friends.filter(friend => {\n        return friend !== person._id;\n      });\n      currentUser.friends = filteredFriends;\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/users/${currentUser._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        },\n        body: JSON.stringify(currentUser)\n      }).then((res) => {\n        res.json().then((res) => {\n          let updatedToken = JSON.parse(localStorage.getItem('token'));\n          updatedToken.user = res;\n          localStorage.setItem('token', JSON.stringify(updatedToken));\n          setFriends(filteredFriends);\n        });\n      });\n    };\n  };\n\n  useEffect(() => {\n    if (!props.checkIfTokenIsExpired()) {\n      let componentMounted = true;\n      // Make api call to get all users\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/users`,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token.token}`\n          }\n        }\n      ).then((initRes) => {\n        initRes.json().then((res) => {\n          if (componentMounted) {\n            const filteredFriends = res.filter(user => token.user.friends.includes(user._id))\n            setFriends(filteredFriends);  \n          };\n        });\n      });\n      return () => {\n        componentMounted = false;\n      };\n    };\n  }, [token.user._id, token.token]);\n\n  return (\n    <div className='friends-page'>\n      {\n        friends && friends.map((user) => {\n        if (user._id !== token.user._id) {\n          return (\n            <div key={user._id} className='user'>\n              <Link className='user-image-backdrop' to={`/users/${user._id}`}>\n                <img className='user-image' src={user.avatar} alt={`${user.firstName}'s avatar`} />\n              </Link>\n              <h5 className='user-name'><Link to={`/users/${user._id}`}>{`${user.firstName} ${user.lastName}`}</Link></h5>\n              <button className='remove-friend-button btn' onClick={() => removeFriend(user)}>Remove friend</button>\n              \n            </div>\n          );\n        };\n        })\n      }\n    </div>\n  );\n};\n\nexport default Friends;","import '../styles/Home.css';\nimport { useState, useEffect } from 'react';\nimport Post from './Post';\nimport { Link } from 'react-router-dom';\nimport { BsFillPeopleFill, BsFillImageFill } from 'react-icons/bs';\nimport ImageModal from './ImageModal';\n\nfunction Home(props) {\n\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  const [posts, setPosts] = useState({data: []});\n  const [textAreaText, setTextAreaText] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [showImageModal, setShowImageModal] = useState(false);\n\n  const createPost = (e) => {\n    e.preventDefault();\n    if (!props.checkIfTokenIsExpired()) {\n      // API CALL TO CREATE POST\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/posts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        },\n        body: JSON.stringify({ 'content': e.target.content.value, 'author': token.user._id })\n      }).then((initRes) => {\n        initRes.json().then((res) => {\n          if (res.message) {\n            setErrorMessage(res.message);\n          } else {\n            let tempPosts = posts.data;\n            res.author = token.user\n            tempPosts.unshift(res);\n            setPosts({ data: tempPosts });\n            setTextAreaText('');\n            setErrorMessage(null);\n          }\n        });\n      });\n    };\n  };\n\n  const changeText = (e) => {\n    setTextAreaText(e.target.value);\n  };\n\n  const uploadImage = () => {\n    setShowImageModal(!showImageModal);\n  };\n\n  useEffect(() => {\n    if (!props.checkIfTokenIsExpired()) {\n      fetch(`${process.env.REACT_APP_API_DOMAIN}/posts`, {\n        headers: {\n          'Authorization': `Bearer ${token.token}`\n        }\n      }).then((initRes) => {\n        initRes.json().then((posts) => {\n          const postFeed = posts.filter(post =>\n            token.user.friends.includes(post.author._id) || post.author._id === token.user._id);\n          setPosts({ data: postFeed });\n        });\n      });\n    };\n  }, [token.token, token.user._id]);\n\n  return (\n    <div className=\"home\">\n      <div className='left-column'>\n        <Link className='current-user' to={`/users/${token.user._id}`}>\n          <img className='left-column-image' src={token.user.avatar} alt={`${token.user.firstName}'s avatar`} />\n          {token.user.firstName} {token.user.lastName}\n        </Link>\n        <Link className='friends' to='/friends'>\n          <div className='left-column-image'>\n            <BsFillPeopleFill />\n          </div>\n          Friends\n        </Link>\n      </div>\n      <div className='post-feed'>\n        {showImageModal && <ImageModal closeModal={uploadImage} userPosts={posts} setUserPosts={setPosts} checkIfTokenIsExpired={props.checkIfTokenIsExpired} />}\n        <div className='post-form-container'>\n          <form className='post-form' onSubmit={createPost}>\n            <div className={`text-area-container ${errorMessage && 'highlight-error'}`}>\n              {<div className='error-message'>{errorMessage}</div>}\n              <textarea id='content' name='content' onChange={changeText} value={textAreaText} placeholder='What is on your mind?' required></textarea>\n            </div>\n            <button className='btn' type='submit'>Post</button>\n          </form>\n          <button className='btn' onClick={uploadImage}><BsFillImageFill /></button>\n        </div>\n        \n        {posts && posts.data.map((post) => {\n          return <Post key={post._id} posts={posts} setPosts={setPosts} post={post} checkIfTokenIsExpired={props.checkIfTokenIsExpired}/>;\n        })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n\n// When i add token.user.friends to dependency array on useEffect it keeps\n// making calls to api\n\n// My  button for friends on left column goes to user page... not a page \n// full of actual friends","import './styles/App.css';\nimport Header from './components/Header';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Users from './components/Users';\nimport Profile from './components/Profile';\nimport Friends from './components/Friends';\nimport Home from './components/Home';\nimport { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nfunction App() {\n\n  const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem('token'));\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n    window.location.reload();\n  };\n\n  const checkIfTokenIsExpired = () => {\n    const token = JSON.parse(localStorage.getItem('token'));\n    if (moment(token.expires) < moment()) {\n      logOut();\n      return true;\n    } else {\n      return false;\n    };\n  };\n\n  useEffect(() => {\n    // Check if token is expired.\n    if (localStorage.getItem('token')) {\n      const token = JSON.parse(localStorage.getItem('token'));\n      // If token is expired, remove and set loggedIn status to false.\n      if (moment(token.expires) < moment()) {\n        localStorage.removeItem('token');\n        setLoggedIn(false);\n      } else {\n        // If token is not expired, set loggedIn status to true.\n        setLoggedIn(true);\n      };\n      // If no token, set loggedIn status to false.\n    } else {\n      setLoggedIn(false);\n    };\n  }, []);\n\n  return (\n    <Router basename='/social-frontend'>\n      <div className=\"App\">\n        <Header loggedIn={loggedIn} setLoggedIn={setLoggedIn} logOut={logOut} />\n        <Switch>\n          <Route path='/login'>\n            <Login setLoggedIn={setLoggedIn} />\n          </Route>\n          <Route path='/signup'>\n            <SignUp setLoggedIn={setLoggedIn} />\n          </Route>\n          <Route path='/users/:userID'>\n            {(!loggedIn && <Redirect to='/login' />) || <Profile checkIfTokenIsExpired={checkIfTokenIsExpired} logOut={logOut} />}\n          </Route>\n          <Route path='/users'>\n            {(!loggedIn && <Redirect to='/login' />) || <Users checkIfTokenIsExpired={checkIfTokenIsExpired} />}\n          </Route>\n          <Route path='/friends'>\n            {(!loggedIn && <Redirect to='/login' />) || <Friends checkIfTokenIsExpired={checkIfTokenIsExpired} />}\n          </Route>\n          <Route path='/'>\n            {(!loggedIn && <Redirect to='/login' />) || <Home checkIfTokenIsExpired={checkIfTokenIsExpired} />}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}